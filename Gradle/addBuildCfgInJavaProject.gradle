import java.text.SimpleDateFormat
import java.util.function.Consumer


class Field {
    String type
    String name
    String value

    Field(String type, String name, String value) {
        this.type = type
        this.name = name
        this.value = value
    }


    @Override
    String toString() {
        return "public static final $type $name = $value;"
    }

    void addToMap(Map<String, Field> dest) {
        dest.put(name, this)
    }
}

def buildCfgs = new HashMap<String, Field>()

static void writeFileLineAppend(String content, FileWriter fw) {
    fw.write(content)
    fw.write("\r\n")
}

void refreshBuildConfig(Collection<Field> fields) {
    File pkgFolder = new File("${projectDir.getAbsolutePath()}/src/main/java/generated")
    pkgFolder.mkdirs()
    File buildCfg = new File(pkgFolder, "BuildCfg.java")
    buildCfg.delete()
    buildCfg.createNewFile()
    FileWriter fw = new FileWriter(buildCfg, true)
    writeFileLineAppend("// This file is generated by gradle script, you shouldn't edit it manually", fw)
    writeFileLineAppend("package generated;", fw)
    writeFileLineAppend("public class BuildCfg {", fw)
    fields.forEach(new Consumer<Field>() {
        @Override
        void accept(Field field) {
            writeFileLineAppend(field.toString(), fw)
        }
    })
    writeFileLineAppend("}", fw)
    fw.close()
}

void refreshVersionInfo(Map<String, Field> buildCfgs) {
    def formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS", Locale.CHINA)
    formatter.setTimeZone(TimeZone.getTimeZone("Asia/Shanghai"))
    new Field("String", "BUILD_TIME", "\"${formatter.format(new Date())}\"").addToMap(buildCfgs)

    String gitHash = new String(new ProcessBuilder("git", "rev-parse", "--short", "HEAD").start().inputStream.readAllBytes()).trim()
    new Field("String", "GIT_HASH", "\"${gitHash}\"").addToMap(buildCfgs)
}

refreshVersionInfo(buildCfgs)
refreshBuildConfig(buildCfgs.values())

compileJava {
    doFirst {
        refreshVersionInfo(buildCfgs)
        refreshBuildConfig(buildCfgs.values())
    }
}